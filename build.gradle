import org.mtr.core.Generator
import org.mtr.core.WebserverSetup

plugins {
	id "java"
	id "maven-publish"
}

group "org.mtr.core"
version rootProject.properties.version

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
}

dependencies {
	implementation "com.github.jonafanho:Shadow-Libraries:master-SNAPSHOT"
	implementation "commons-io:commons-io:+"
	implementation "org.eclipse.jetty:jetty-server:9.+"
	implementation "org.eclipse.jetty:jetty-servlet:9.+"
	implementation "org.eclipse.jetty:jetty-util:9.+"
	implementation "javax.servlet:javax.servlet-api:+"
	compileOnly "com.google.code.findbugs:jsr305:+"
	testImplementation "org.junit.jupiter:junit-jupiter-api:+"
	testImplementation "org.apache.httpcomponents:httpclient:+"
	testCompileOnly "com.google.code.findbugs:jsr305:+"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:+"
}

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(8))
	}
	withSourcesJar()
	withJavadocJar()
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
		}
	}
}

jar {
	manifest {
		attributes("Main-Class": "org.mtr.core.Main")
	}
}

test {
	useJUnitPlatform()
	testLogging { showStandardStreams = true }
}

tasks.register("setupFiles") {
	Generator.generate(project, "schema/data", "core/generated/data", true, "core.data", "core.simulation")
	Generator.generate(project, "schema/legacy", "legacy/generated/data", false, "core.data", "legacy.data")
	Generator.generate(project, "schema/integration", "core/generated/integration", false, "core.data", "core.integration")
	Generator.generate(project, "schema/map", "core/generated/map", false, "core.map")
	Generator.generate(project, "schema/oba", "core/generated/oba", false, "core.oba")
	Generator.generate(project, "schema/operation", "core/generated/operation", false, "core.data", "core.operation")
	WebserverSetup.setup(project.rootDir)
}
